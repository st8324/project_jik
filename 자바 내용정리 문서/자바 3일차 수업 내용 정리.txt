1. 변수
 - 변수 선언을 할 수 있다.
 - 변수를 콘솔에 출력할 수 있다.
 - 콘솔에서 입력받아 변수에 저장할 수 있다.

 - 변수 선언 방법
타입 변수명;
타입 변수명 = 값;
타입 변수명1, 변수명2;
 - 타입 종류
  - 정수    : int, char
  - 실수    : float, double
  - 논리형 : boolean
  - 문자열 : String
 - 변수명 작성 규칙(필수)
 - 변수명 작성 관례(필수x)
 - System.out.println
 - Scanner

2. 연산자
 - 연산자 종류를 알고, 그 결과를 예측할 수 있다.
 - 산술(+-*/%) : 숫자
  - / : 정수 / 정수 => 정수(소수점이 버려짐)
  - 강제 타입 변환을 이용하여 소수점을 살림
  - % : 나머지를 구하는 연산자
  - /, %는 0으로 나누면 안됨
 - 비교 : <, >, <=, >=, ==, !=
  - =와 ==를 혼동하지 말자
  - 결과가 참 또는 거짓
 - 조건식 : 결과가 참 또는 거짓이 되는 식
 - 논리 : &&, ||, ! 
  - && : ~하고, 둘다 참이면 참, 나머진 거짓
  - || : ~하거나, 둘다 거짓이면 거짓, 나머진 참
  - ! : 반대, 참이면 거짓, 거짓이면 참
 - 증감연산자 : 정수
  - 최종적으로 1증가/1감소
  - 전위형 : ++변수명,--변수명, 증가/감소하고 동작
  - 후위형 : 변수명++,변수명--, 동작하고 증가/감소
 - 대입연산자 : = 
  - 오른쪽에 있는 값을 왼쪽에 저장
  - 왼쪽에는 변수가 1개와야 한다
 - 조건선택연산자 : (조건식) ? 참 : 거짓;

3. 조건문
 - 조건문을 사용해야 하는 상황을 알고, 조건문을 사용할 수 있다.
 - 상황에 따라 결과가 달라질 때 조건문을 사용
 - ~하면 ...해라
 - 모든 조건문은 if문으로 표현 가능
 - if문, switch문
 - if문 기본문법
 - 조건식1이 참이면 실행문1을 실행하고, 
   조건식1이 거짓이고 조건식2가 참이면 실행문2를 실행하고,
   조건식1, 조건식2가 모두 거짓이면 실행문3을 실행해라
 - else : 현재 위치를 기준으로 위에 있는 조건식이 거짓이면으로 해석
if(조건식1){
	실행문1;
} else if(조건식2){
	실행문2;
} else{
	실행문3;
}	

 - 이중 if문
  - if문의 실행문으로 if문이 또 오는 경우
  - 이중 if문은 단일 if문으로도 표현할 수 있다
if(조건식1){
	if(조건식2){
		실행문;
	}
}

if(조건식1 && 조건식2){
	실행문;
}

- switch문 
 - 사용하는 변수의 값이 제한적일 때
  - 산술연산 예제, 월의 마지막일 출력 예제
 - 문법

switch(변수나 식){
case 값1:			if(변수 == 값1)
	실행문1;		
	break;
case 값2:			else if(변수 == 값2)
	실행문2;
	break;
default:			else
	실행문3;
}

 - case 값으로는 정수형값과 문자열만 가능
 - ==로는 문자열을 비교할 수 없다

반복문
 - 규칙적인 작업을 반복적으로 할 때 반복문을 사용
 - 규칙과 반복횟수
 - for문, while문, do while문
 - for문 문법
for(1.초기화; 2.5.8.조건식 ; 4.7.증감식){
	3.6.실행문;
}
 - 초기화 : for문 실행 시 1번만 실행, 조건식이나 실행문에서 사용하는 변수를
              초기화, 생략 가능
 - 조건식 : 조건식이 참이면 반복문이 동작, 거짓이면 반복문이 종료
              => 반복문은 조건식이 거짓이 될때까지 반복,
              생략 가능, 생략하면 조건식은 무조건 참으로 판별
 - 증감식 : 조건식, 실행문에서 사용하는 변수를 증가/감소시킴, 생략가능

홍길동 1~10까지 외치라고 함
초기화 : 홍길동 학생이 외칠 숫자를 1로 초기화
조건식 : 홍길동 학생이 외칠 숫자가 10보다 작거나 같을때까지
실행문 : 홍길동 학생이 외칠 숫자를 외침
증감식 : 홍길동 학생이 외칠 숫자를 1증가












